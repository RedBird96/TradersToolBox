<UserControl
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:TradersToolbox.Views"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:cores="clr-namespace:TradersToolbox.Core.Serializable;assembly=TradersToolbox.Core"
             xmlns:dxi="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
             xmlns:dxgt="http://schemas.devexpress.com/winfx/2008/xaml/grid/themekeys"
             xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/grid/internal"
             x:Class="TradersToolbox.Views.SignalsView"
             mc:Ignorable="d" 
             d:DesignHeight="500" d:DesignWidth="600"
             x:Name="mySignalsView">
    <UserControl.Resources>
        <!-- <CollectionViewSource x:Key="colSource" Source="{Binding ItemsSource, ElementName=mySignalsView}">
            <CollectionViewSource.GroupDescriptions>
                <PropertyGroupDescription PropertyName="GroupId"/>
            </CollectionViewSource.GroupDescriptions>
        </CollectionViewSource> -->

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <!--<local:ArithmeticConverter x:Key="ArithmeticConverter"/>-->
        <views:MultiValueConverter x:Key="MultiValueConverter" />
        <Storyboard x:Key="ArgsDataContextChangedAnimation">
            <DoubleAnimation
                Storyboard.TargetName="dataGridArgs"
                 Storyboard.TargetProperty="Opacity"
                 From="1" To="0.7" Duration="0:0:0.150" 
                 AutoReverse="True"/>
        </Storyboard>
        <Style x:Key="SelectButton" TargetType="{x:Type dx:SimpleButton}">
            <Setter Property="MinHeight" Value="22"/>
            <Setter Property="Margin" Value="3 4 2 1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="CornerRadius" Value="5"/>
            <EventSetter Event="ButtonBase.Click" Handler="ButtonSelectSignals_Click"/>
        </Style>
    </UserControl.Resources>
    <Grid x:Name="mainGrid" Margin="0,5,0,0">
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="245" MinWidth="245"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
                <ColumnDefinition Width="auto"/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Signals" Margin="0,3,5,0"/>
            <dxe:ComboBoxEdit x:Name="cbSigType" Grid.Column="1" VerticalAlignment="Top" SelectedIndex="0" SelectedIndexChanged="cbSigType_SelectedIndexChanged"
                              IsTextEditable="False">
                <dxe:ComboBoxEditItem Content="All"/>
                <dxe:ComboBoxEditItem Content="Selected"/>
                <dxe:ComboBoxEditItem Content="Base Symbol"/>
                <dxe:ComboBoxEditItem Content="Market 2 Symbol"/>
                <dxe:ComboBoxEditItem Content="Market 3 Symbol"/>
                <dxe:ComboBoxEditItem Content="Parametric"/>
                <dxe:ComboBoxEditItem Content="Legacy"/>
                <dxe:ComboBoxEditItem Content="Favorites"/>
                <dxe:ComboBoxEditItem Content="Custom"/>
                <dxe:ComboBoxEditItem Content="Portfolio Strategies"/>
            </dxe:ComboBoxEdit>
            <TextBlock Grid.Column="2" Margin="10,3,5,0" Text="Filter"/>
            <dxe:ButtonEdit x:Name="tbSigFilter" AllowDefaultButton="False" Grid.Column="3" VerticalAlignment="Top" NullValueButtonPlacement="EditBox"
                            EditValueChanged="tbSigFilter_EditValueChanged"/>
            <TextBlock Grid.Column="4" Margin="10,3" ><Hyperlink Click="Hyperlink_Click"><InlineUIContainer>
                        <TextBlock x:Name="tbExpCol" Text="Exp/Col" ToolTip="Expand/collapse all" />
                    </InlineUIContainer></Hyperlink></TextBlock>
        </Grid>

        <!--     <DataGrid x:Name="dataGrid" SelectionMode="Extended" Grid.Column="1" Grid.IsSharedSizeScope="True">
            <DataGrid.Columns>
                <DataGridTextColumn Header="Key" Binding="{Binding Key}"/>
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate>
                                        <Expander IsExpanded="True">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Text="{Binding Path=Name.HeaderText}" FontWeight="Bold" Foreground="Gray" SourceUpdated="TextBlock_SourceUpdated_1" TargetUpdated="TextBlock_TargetUpdated" />
                                                    <TextBlock Text="{Binding ItemCount}" Foreground="Green" FontWeight="Bold" FontStyle="Italic" Margin="10,0,0,0" SourceUpdated="TextBlock_SourceUpdated_1" TargetUpdated="TextBlock_TargetUpdated"  />
                                                    <TextBlock Text=" item(s)" Foreground="Silver" FontStyle="Italic" />
                                                    <TextBlock Text="{Binding Path=Name.count}" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <ItemsPresenter />
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
        </DataGrid> -->

        <!--     <ListBox x:Name="listBox" SelectionMode="Extended" Grid.Column="1" Grid.IsSharedSizeScope="True" >
            <ListBox.ItemTemplate>
                <ItemContainerTemplate>
                    <Border CornerRadius="8" Background="#FFA0FFFF">
                        <Expander x:Name="expander" Header="{Binding Key}">
                            <ListBox ItemsSource="{Binding children}">
                                <ListBox.ItemTemplate>
                                    <ItemContainerTemplate>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition SharedSizeGroup="SSS" Width="0*"/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>

                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <Label Content="{Binding key}" FontSize="11"></Label>
                                            <Label Content="{Binding codeEL}" Background="#FFEEC0C0" Grid.Column="1" Grid.Row="0" FontSize="11"></Label>
                                            <Label Content="BBBвпвапвапавпвапвапвапвапвпвпвапвапвапвпвапвапавпавпавпвапвапвапвапавпвпвп" Background="#FFF1FF9C" Grid.Column="2" Grid.Row="0"  FontSize="11"></Label>
                                            <Label Content="{Binding codeNT}" FontSize="11" Grid.Row="1" Grid.ColumnSpan="3" Background="#FFF7DAA6"></Label>
                                        </Grid>
                                    </ItemContainerTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Expander>
                    </Border>
                </ItemContainerTemplate>
            </ListBox.ItemTemplate>
        </ListBox> -->

        <!--
        <dxg:GridControl x:Name="sigGrid" AutoGenerateColumns="None" EnableSmartColumnsGeneration="True" SelectionChanged="GridControl_SelectionChanged"
                         ItemsSource="{Binding ItemsSourceTest}" DataContext="{Binding ElementName=mySignalsView}"
                         PreviewTextInput="GridControl_PreviewTextInput" AllowCollectionView="True"
                         DesignTimeDataObjectType="{x:Type cores:Signal}" DesignTimeDataSourceRowCount="5" MinHeight="100" MaxHeight="200"
                         AllowInitiallyFocusedRow="False" SelectionMode="Row"
                         >
            <dxg:GridControl.View>
                <dxg:TableView NavigationStyle="Row" RowMinHeight="21" HighlightItemOnHover="True"
                            ShowSearchPanelMode="Never" ShowFilterPanelMode="Never"
                            AllowColumnMoving="False" ShowIndicator="False" ShowHorizontalLines="False" ShowVerticalLines="False"
                            AutoWidth="True" ShowGroupPanel="False" IsSynchronizedWithCurrentItem="True"
                            AllowSorting="False" AllowFilterEditor="False" AllowColumnFiltering="False"
                            
                               
                               >

                    
                    
                    <dxg:TableView.GroupSummaryItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Text}" Background="Red" Margin="5,0"/>
                        </DataTemplate>
                    </dxg:TableView.GroupSummaryItemTemplate>


                    <dxg:TableView.RowCellMenuCustomizations>
                        <dxb:BarButtonItem Content="Add selected to Favorites" Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Add.svg}"
                                           ItemClick="BarButtonItem_ItemClick"/>
                        <dxb:BarButtonItem Content="Remove selected from Favorites" Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Delete.svg}"
                                           ItemClick="BarButtonItem_ItemClick_1"/>
                        <dxb:BarItemSeparator/>
                        <dxb:BarButtonItem Content="Copy selected parametric signals group" Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Check.svg}"
                                           ItemClick="BarButtonItem_ItemClick_2"/>
                        <dxb:BarButtonItem Content="Delete selected parametric signals group" Glyph="{dx:DXImage SvgImages/Icon Builder/Actions_Forbid.svg}"
                                           ItemClick="BarButtonItem_ItemClick_3"/>
                    </dxg:TableView.RowCellMenuCustomizations>
                    
                </dxg:TableView>
            </dxg:GridControl.View>
            <dxg:GridColumn FieldName="Text" IsSmart="True" Header="Signal" MinWidth="100" HorizontalHeaderContentAlignment="Center"/>

            <dxg:GridColumn FieldName="GroupId.HeaderText" IsSmart="True" GroupIndex="0">
                <dxg:GridColumn.GroupValueTemplate>
                    <DataTemplate>
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition MinWidth="180"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Text="{Binding Text}" Margin="0,0,10,0"/>
                            <TextBlock Text="P" MinWidth="20" TextAlignment="Center" Foreground="White" Background="Gold" Grid.Column="1"
                                       Visibility="{Binding RowData.Row.GroupId.IsParametric, Converter={StaticResource BooleanToVisibilityConverter}}"/>

                            <TextBlock Text="{DXBinding RowData.Row.GroupId.CountEntry, Mode=OneWay, UpdateSourceTrigger=LostFocus}" Foreground="White" Background="Green" Grid.Column="2"/>
                            <TextBlock Text="{DXBinding RowData.Row.GroupId.CountExit, Mode=OneWay}" Foreground="White" Background="Blue" Grid.Column="2"/>
                        </Grid>
                    </DataTemplate>
                </dxg:GridColumn.GroupValueTemplate>
            </dxg:GridColumn>

            <dxg:GridColumn FieldName="ActiveForEntry" IsSmart="True" Header="Entry" HorizontalHeaderContentAlignment="Center"
                                FixedWidth="True" Width="40" MinWidth="20">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:CheckEdit x:Name="PART_Editor" HorizontalAlignment="Center"
                                           MouseLeftButtonDown="PART_Editor_MouseLeftButtonDown"
                                           MouseLeftButtonUp="PART_Editor_MouseLeftButtonUp"
                                           MouseLeave="PART_Editor_MouseLeave"
                                           Tag="entry"
                                           IsEnabled="{Binding RowData.Row.CanEdit, Mode=OneWay}"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="IsRequired" IsSmart="True" Header="Required" HorizontalHeaderContentAlignment="Center"
                                FixedWidth="True" Width="60" MinWidth="20">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:CheckEdit x:Name="PART_Editor" HorizontalAlignment="Center"
                                           MouseLeftButtonDown="PART_Editor_MouseLeftButtonDown"
                                           MouseLeftButtonUp="PART_Editor_MouseLeftButtonUp"
                                           MouseLeave="PART_Editor_MouseLeave"
                                           Tag="required"
                                           IsEnabled="{DXBinding RowData.Row.CanEdit and RowData.Row.ActiveForEntry, Mode=OneWay}"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
            </dxg:GridColumn>
            <dxg:GridColumn FieldName="ActiveForExit" IsSmart="True" Header="Exit" HorizontalHeaderContentAlignment="Center"
                                FixedWidth="True" Width="40" MinWidth="20">
                <dxg:GridColumn.CellTemplate>
                    <DataTemplate>
                        <dxe:CheckEdit x:Name="PART_Editor" HorizontalAlignment="Center"
                                           MouseLeftButtonDown="PART_Editor_MouseLeftButtonDown"
                                           MouseLeftButtonUp="PART_Editor_MouseLeftButtonUp"
                                           MouseLeave="PART_Editor_MouseLeave"
                                           Tag="exit"
                                           IsEnabled="{Binding RowData.Row.CanEdit, Mode=OneWay}"/>
                    </DataTemplate>
                </dxg:GridColumn.CellTemplate>
            </dxg:GridColumn>

            <dxg:GridControl.GroupSummary>
                
                
                <dxg:GridSummaryItem FieldName="Text" SummaryType="Count" DisplayFormat="from {0} item(s)" />
            </dxg:GridControl.GroupSummary>
        </dxg:GridControl>
        -->


        <Border BorderBrush="{Binding Tag, ElementName=listView}" BorderThickness="1" Grid.Row="1" Grid.RowSpan="4"
                Margin="0,0,10,0">
            <ListView x:Name="listView" VirtualizingPanel.IsVirtualizingWhenGrouping="True"
                  SelectionChanged="ListView_SelectionChanged" DataContext="{Binding ElementName=mySignalsView}"
                  ItemsSource="{Binding ItemsSource}" PreviewTextInput="ListView_PreviewTextInput"
                  Background="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=DataPresenterBackground}}"
                  Foreground="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorTextBrush}}"
                  Tag="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=DataNavigatorBorderBrush}}"
                  BorderThickness="0"
                  >
                <ListView.Resources>
                    <SolidColorBrush x:Key="borderBrush" Color="{Binding Tag.Color, ElementName=listView}" Opacity="0.5"/>
                    <!--<Style TargetType="GridViewColumnHeader">
                        <Setter Property="Background" Value="{Binding Background, ElementName=listView}"/>
                        <Setter Property="BorderBrush" Value="{Binding Tag, ElementName=listView}"/>
                        <Setter Property="Foreground" Value="{Binding Foreground, ElementName=listView}"/>
                    </Style>-->

                    <Color x:Key="SelectedBackgroundColor">#50007ACC</Color>
                    <Color x:Key="SelectedUnfocusedColor">#FFC9DEF5</Color>

                    <Color x:Key="ControlMouseOverColor">#FF3843C4</Color>


                    <Style x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}" TargetType="ScrollViewer">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ScrollViewer">
                                    <Grid Background="{TemplateBinding Background}">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="*" />
                                            <ColumnDefinition Width="Auto" />
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>

                                        <DockPanel Margin="{TemplateBinding Padding}">
                                            <ScrollViewer DockPanel.Dock="Top" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" Focusable="false">
                                                <GridViewHeaderRowPresenter Margin="0"
                                                      Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ColumnHeaderTemplateSelector="{Binding Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
                                                      AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
                                                      ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                            </ScrollViewer>

                                            <ScrollContentPresenter Name="PART_ScrollContentPresenter"
                                                KeyboardNavigation.DirectionalNavigation="Local"
                                                CanContentScroll="True"
                                                CanHorizontallyScroll="False"
                                                CanVerticallyScroll="False" />
                                        </DockPanel>

                                        <ScrollBar Name="PART_HorizontalScrollBar"
                                             Orientation="Horizontal"
                                             Grid.Row="1"
                                             Maximum="{TemplateBinding ScrollableWidth}"
                                             ViewportSize="{TemplateBinding ViewportWidth}"
                                             Value="{TemplateBinding HorizontalOffset}"
                                             Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" />

                                        <ScrollBar Name="PART_VerticalScrollBar"
                                             Grid.Column="1"
                                             Maximum="{TemplateBinding ScrollableHeight}"
                                             ViewportSize="{TemplateBinding ViewportHeight}"
                                             Value="{TemplateBinding VerticalOffset}"
                                             Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" />

                                        <Border Grid.Row="1" Grid.Column="1" Background="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=SearchPanelBackground}}"/>
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>

                    <Style x:Key="GridViewColumnHeaderGripper" TargetType="Thumb">
                        <Setter Property="Width" Value="10" />
                        <Setter Property="Background" Value="{Binding Tag, ElementName=listView}"/>
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type Thumb}">
                                    <Border Padding="{TemplateBinding Padding}" Background="Transparent">
                                        <Rectangle HorizontalAlignment="Center" Width="1" Fill="{TemplateBinding Background}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <!--<Setter Property="BorderBrush">
                            <Setter.Value>
                                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                    <GradientStop Color="Black"     Offset="0" />
                                    <GradientStop Color="White"    Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>-->
                    </Style>

                    <Style x:Key="{x:Type GridViewColumnHeader}"     TargetType="GridViewColumnHeader">
                        <Setter Property="HorizontalContentAlignment"          Value="Center" />
                        <Setter Property="VerticalContentAlignment"          Value="Center" />
                        <Setter Property="Foreground" Value="{Binding Foreground, ElementName=listView}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="GridViewColumnHeader">
                                    <Grid>
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver"/>
                                                <VisualState x:Name="Pressed" />
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <Border x:Name="HeaderBorder" BorderThickness="0,0,0,1" Padding="0"
                                                BorderBrush="{Binding Tag, ElementName=listView}"
                                                Background="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=EditFormBackground}}">

                                            <ContentPresenter x:Name="HeaderContent"
                                                  Margin="0,1,0,2"
                                                  RecognizesAccessKey="True"
                                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                        </Border>
                                        <Thumb x:Name="PART_HeaderGripper"               HorizontalAlignment="Right"         Margin="0,0,-5,0"
                                            Style="{StaticResource GridViewColumnHeaderGripper}" />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                        <Style.Triggers>
                            <Trigger Property="Role" Value="Floating">
                                <Setter Property="Opacity" Value="0.7" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Canvas Name="PART_FloatingHeaderCanvas">
                                                <Rectangle Fill="#60000000"   Width="{TemplateBinding ActualWidth}"  Height="{TemplateBinding ActualHeight}" />
                                            </Canvas>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                            <Trigger Property="Role" Value="Padding">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="GridViewColumnHeader">
                                            <Border Name="HeaderBorder" BorderThickness="0,0,0,1" BorderBrush="{Binding Tag, ElementName=listView}"
                                                Background="{dxi:ThemeResource {dxgt:TableViewThemeKey ResourceKey=EditFormBackground}}">
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                    </Style>

                    <Style x:Key="{x:Type ListView}" TargetType="ListView">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
                        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
                        <Setter Property="VerticalContentAlignment" Value="Center" />
                        <Setter Property="ContextMenu" Value="{DynamicResource contextMenu}" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListView">
                                    <Border Name="Border"   BorderThickness="0" Background="{Binding Background, ElementName=listView}">

                                        <ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
                                            <ItemsPresenter />
                                        </ScrollViewer>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsGrouping" Value="true">
                                            <Setter Property="ScrollViewer.CanContentScroll" Value="false" />
                                        </Trigger>
                                        <Trigger Property="IsEnabled" Value="false">
                                            <Setter TargetName="Border" Property="Opacity" Value="0.8">
                                            </Setter>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>

                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ShowSelectionControls, ElementName=mySignalsView}" Value="False">
                                <Setter Property="ContextMenu" Value="{x:Null}" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>

                    <ContextMenu x:Key="contextMenu">
                        <MenuItem Header="Add selected to Favorites" Click="MenuItem_AddToFavorites_Click"/>
                        <MenuItem Header="Remove selected from Favorites" Click="MenuItem_RemoveFromFavorites_Click"/>
                        <Separator/>
                        <MenuItem Header="Copy selected parametric signals group" Click="MenuItem_CopyClick"/>
                        <MenuItem Header="Delete selected parametric signals group" Click="MenuItem_DeleteClick"/>
                    </ContextMenu>

                </ListView.Resources>

                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="SnapsToDevicePixels" Value="true" />
                        <Setter Property="OverridesDefaultStyle" Value="true" />
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border x:Name="Border" Padding="1" SnapsToDevicePixels="true" Background="Transparent">
                                        <VisualStateManager.VisualStateGroups>
                                            <VisualStateGroup x:Name="CommonStates">
                                                <VisualState x:Name="Normal" />
                                                <VisualState x:Name="MouseOver" />
                                                <VisualState x:Name="Disabled" />
                                            </VisualStateGroup>
                                            <VisualStateGroup x:Name="SelectionStates">
                                                <VisualState x:Name="Unselected" />
                                                <VisualState x:Name="Selected">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                             Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0"
                                                             Value="{StaticResource SelectedBackgroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                                <VisualState x:Name="SelectedUnfocused">
                                                    <Storyboard>
                                                        <ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Panel.Background).(SolidColorBrush.Color)">
                                                            <EasingColorKeyFrame KeyTime="0" Value="{StaticResource SelectedBackgroundColor}" />
                                                        </ColorAnimationUsingKeyFrames>
                                                    </Storyboard>
                                                </VisualState>
                                            </VisualStateGroup>
                                        </VisualStateManager.VisualStateGroups>
                                        <GridViewRowPresenter VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>


                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView AllowsColumnReorder="False">
                        <GridViewColumn Header="Signal" Width="195">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Text}" TextTrimming="CharacterEllipsis" ToolTip="{Binding Text}" 
                                               Margin="0,1,0,0"/>
                                    <!--  <StackPanel Orientation="Vertical">
                                    
                                    <Expander Header="{Binding Text}">

                                        <DataGrid MinWidth="180" AutoGenerateColumns="False" ItemsSource="{Binding AllArgs}">
                                            <DataGrid.Columns>
                                                <DataGridTextColumn Header="Argument" Binding="{Binding Path=Key}" Width="90" />
                                                <DataGridTextColumn Header="Min" Binding="{Binding BaseValue}" />
                                                <DataGridTextColumn Header="Max" Binding="{Binding LastValue}" />
                                                <DataGridTextColumn Header="Step" Binding="{Binding IncrementStep}" />
                                            </DataGrid.Columns>
                                        </DataGrid>
                                    </Expander>
                                </StackPanel>-->
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <!--  <GridViewColumn Header="Code EL" Width="50" DisplayMemberBinding="{Binding CodeEL}" /> -->
                        <!--  <GridViewColumn Header="test" Width="50" DisplayMemberBinding="{Binding GroupId.count}" /> -->
                        <GridViewColumn Header="Entry" Width="55">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding ActiveForEntry}" Checked="CheckBox_Checked" Unchecked="CheckBox_Checked"
                                          Tag="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                          IsEnabled="{Binding CanEdit, Mode=OneWay}" Padding="0,2" Focusable="False"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Required" Width="55">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsRequired}"  Padding="0,2" Focusable="False">
                                        <CheckBox.IsEnabled>
                                            <MultiBinding Converter="{StaticResource ResourceKey=MultiValueConverter}" Mode="OneWay">
                                                <Binding Path="ActiveForEntry" />
                                                <Binding Path="CanEdit" />
                                            </MultiBinding>
                                        </CheckBox.IsEnabled>
                                    </CheckBox>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Header="Exit" Width="50">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding ActiveForExit}" Checked="CheckBox_Checked_Out" Unchecked="CheckBox_Checked_Out"
                                          Tag="{Binding IsSelected, Mode=OneWay, RelativeSource={RelativeSource AncestorType={x:Type ListViewItem}}}"
                                          IsEnabled="{Binding CanEdit, Mode=OneWay}" Padding="0,2" Focusable="False"/>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>

                <ListView.GroupStyle>
                    <GroupStyle>
                        <GroupStyle.ContainerStyle>
                            <Style TargetType="{x:Type GroupItem}">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border BorderBrush="#30AAAAAA"
                                                BorderThickness="1" CornerRadius="5" Margin="1">
                                                <Expander Margin="5,1,5,1" IsExpanded="{Binding Name.IsExpanded}">
                                                    <Expander.Header>
                                                        <Grid>
                                                            <Grid.Background>
                                                                <LinearGradientBrush EndPoint="1,0" StartPoint="0,0">
                                                                    <GradientStop Color="#08F0F7FF" Offset="0"/>
                                                                    <GradientStop Color="Transparent" Offset="1"/>
                                                                </LinearGradientBrush>
                                                            </Grid.Background>
                                                            <Grid.RowDefinitions>
                                                                <RowDefinition/>
                                                            </Grid.RowDefinitions>
                                                            <Grid.ColumnDefinitions>
                                                                <ColumnDefinition MinWidth="180"/>
                                                                <ColumnDefinition MinWidth="20"/>
                                                                <ColumnDefinition/>
                                                            </Grid.ColumnDefinitions>
                                                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                                                <!--<Polygon Points="6,0 10,12 0,5 12,5 2,12" Fill="Blue" FillRule="Nonzero">-->
                                                                <!--<Polygon Points="0,0 8,0 8,8 0,8" Fill="LightBlue" FillRule="Nonzero" Stroke="DarkBlue" Margin="1,2,2,0" ToolTip="Select/Deselect all"
                                                             Cursor="Arrow" MouseLeftButtonDown="Polygon_MouseLeftButtonDown" DataContext="{Binding Items}">
                                                        </Polygon>
                                                        <CheckBox></CheckBox>-->
                                                                <!--TEST_ORDER <TextBlock Text="{Binding Path=Name.VisualOrder}" Margin="0,0,10,0" />-->
                                                                <TextBlock Text="{Binding Name.HeaderText}" FontWeight="Bold" Foreground="Gray" />
                                                            </StackPanel>
                                                            <TextBlock Text="  P  " Grid.Column="1" ToolTip="Group of parametric signals" Background="#7FFFD700" Foreground="White"
                                                                   Visibility="{Binding Name.IsParametric, Converter={StaticResource BooleanToVisibilityConverter}}" />
                                                            <StackPanel Orientation="Horizontal" Grid.Column="2">
                                                                <TextBlock Text="{Binding Name.CountEntry}" Foreground="Green" FontStyle="Italic" Margin="10,0,0,0" />
                                                                <TextBlock Text="{Binding Name.CountExit, StringFormat=(\{0\})}" Foreground="Green" FontStyle="Italic" Margin="3,0,0,0" />
                                                                <TextBlock Text=" from " Foreground="Silver" FontStyle="Italic" />
                                                                <TextBlock Text="{Binding ItemCount}" Foreground="Silver" FontStyle="Italic" />
                                                                <TextBlock Text=" item(s)" Foreground="Silver" FontStyle="Italic" />
                                                            </StackPanel>
                                                        </Grid>
                                                    </Expander.Header>
                                                    <ItemsPresenter/>
                                                </Expander>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </GroupStyle.ContainerStyle>
                    </GroupStyle>
                </ListView.GroupStyle>
            </ListView>
        </Border>



        <Border Grid.Column="1" CornerRadius="4" BorderBrush="#19000000" Background="#0C000000" Margin="0,0,0,8" BorderThickness="1">
            <TextBlock Text="{Binding SelectedItem.Text, ElementName=listView, FallbackValue=- Selected signal name -}" Padding="4,3,3,3"/>
        </Border>

        <StackPanel Grid.Column="1" Grid.Row="1">
            <dxg:GridControl x:Name="dataGridArgs" IsEnabled="False" MaxHeight="1000" dx:ScrollBarExtensions.ScrollBarMode="TouchOverlap"
                             AllowInitiallyFocusedRow="False">
                <dxg:GridControl.View>
                    <dxg:TableView ShowIndicator="False" ShowGroupPanel="False" AllowResizing="False" AllowSorting="False" HighlightItemOnHover="True"
                                   AutoWidth="True" AllowBestFit="True" BestFitArea="All" BestFitMode="AllRows"
                                   AllowColumnFiltering="False" AllowColumnMoving="False" IsColumnMenuEnabled="False" ShowHorizontalLines="False"
                                   UseEvenRowBackground="True" RowMinHeight="22"/>
                </dxg:GridControl.View>
                <dxg:GridColumn x:Name="colCheck" FieldName="Value.IsOptimize" Header="X" MinWidth="20" MaxWidth="20" Visible="False" HorizontalHeaderContentAlignment="Center"/>
                <dxg:GridColumn FieldName="Key" Header="Parameter" ReadOnly="True" MinWidth="50" />
                <dxg:GridColumn x:Name="colMin" FieldName="Value.BaseValue" Header="Base" HorizontalHeaderContentAlignment="Center"/>
                <dxg:GridColumn FieldName="Value.LastValue" Header="Max" HorizontalHeaderContentAlignment="Center"/>
                <dxg:GridColumn x:Name="colStep" FieldName="Value.IncrementStep" Header="Step" HorizontalHeaderContentAlignment="Center"/>
            </dxg:GridControl>
        </StackPanel>

        <GroupBox x:Name="SelectionStat" Grid.Column="1" Grid.Row="2" Header="Signals selection statistics" Margin="1,0,-1,0">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1.4*"/>
                    <ColumnDefinition Width="2*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <!--<TextBlock Grid.ColumnSpan="2" Text="Signals selection statistics" FontWeight="Bold" Foreground="Gray" Margin="0,0,0,5"/>-->
                <TextBlock Grid.Row="1" Text="Base:"  Margin="0,0,3,5"/>
                <TextBlock Grid.Row="1" Grid.Column="1" x:Name="tbBase"/>
                <TextBlock Grid.Row="2" Text="Parametric:"  Margin="0,0,3,5"/>
                <TextBlock Grid.Row="2" Grid.Column="1" x:Name="tbParam"/>
                <TextBlock Grid.Row="3" Text="Custom:"  Margin="0,0,3,5"/>
                <TextBlock Grid.Row="3" Grid.Column="1" x:Name="tbCustom"/>
                <TextBlock Grid.Row="4" Text="Strategy:" Margin="0,0,3,5"/>
                <TextBlock Grid.Row="4" Grid.Column="1" x:Name="tbStrat"/>
                <TextBlock Grid.Row="5" Text="Required:" Margin="0,0,3,5"/>
                <TextBlock Grid.Row="5" Grid.Column="1" x:Name="tbRequired"/>
                <TextBlock Grid.Row="6" Text="Total:" Margin="0,5,3,3"/>
                <TextBlock Grid.Row="6" Grid.Column="1" x:Name="tbTotal" Margin="0,5,0,3"/>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="3" x:Name="gbEntrySelection" Margin="0,3,0,0"
                  Visibility="{Binding ShowSelectionControls, ElementName=mySignalsView, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid Margin="0,-7,-7,-7">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="87" />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Entry selection:" VerticalAlignment="Center" Padding="2"/>

                <!--<dx:DropDownButton Content="Entry signals selection" Grid.ColumnSpan="2">
                    <dxb:PopupMenu>
                        <dxb:BarButtonItem Content="Random 500" />
                        <dxb:BarButtonItem Content="Random 1000" />
                        <dxb:BarButtonItem Content="All" />
                        <dxb:BarItemSeparator/>
                        <dxb:BarButtonItem Content="Clear" />
                    </dxb:PopupMenu>
                </dx:DropDownButton>-->
                <dx:SimpleButton x:Name="ButtonEntrySelect1000" Tag="1000"  Grid.Column="1" Content="Rand 1000" Style="{DynamicResource SelectButton}" />
                <dx:SimpleButton x:Name="ButtonEntrySelect500" Tag="500"    Grid.Row="1" Grid.Column="1" Content="Rand 500 " Style="{DynamicResource SelectButton}"/>
                <dx:SimpleButton x:Name="ButtonEntrySelectAll" Tag="-1"     Grid.Column="2" Content="All" Style="{DynamicResource SelectButton}" />
                <dx:SimpleButton x:Name="ButtonEntryClearSelection" Tag="0" Grid.Row="1" Grid.Column="2" Content="Clear" Style="{DynamicResource SelectButton}"/>

                <dx:SimpleButton x:Name="ButtonEntrySelectPositive" Tag="positive" Grid.Row="1" Content="Positive" Style="{DynamicResource SelectButton}"
                                 Command="{Binding SelectPositiveCommand, ElementName=mySignalsView}" CommandParameter="entry"
                                 Visibility="{DXBinding '@e(mySignalsView).SelectPositiveCommand!=null', Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </Grid>
        </GroupBox>

        <GroupBox Grid.Column="1" Grid.Row="4" x:Name="gbExitSelection" Margin="0,3,0,0"
                  Visibility="{Binding ShowSelectionControls, ElementName=mySignalsView, Converter={StaticResource BooleanToVisibilityConverter}}">
            <Grid Margin="0,-7,-7,-7">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="87" />
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>

                <Label Content="Exit selection:" VerticalAlignment="Center" Padding="2"/>
                <dx:SimpleButton x:Name="ButtonExitSelect1000" Tag="1000"  Grid.Column="1" Content="Rand 1000" Style="{DynamicResource SelectButton}" />
                <dx:SimpleButton x:Name="ButtonExitSelect500" Tag="500"    Grid.Row="1" Grid.Column="1" Content="Rand 500 " Style="{DynamicResource SelectButton}" />
                <dx:SimpleButton x:Name="ButtonExitSelectAll" Tag="-1"     Grid.Column="2" Content="All" Style="{DynamicResource SelectButton}" />
                <dx:SimpleButton x:Name="ButtonExitClearSelection" Tag="0" Grid.Row="1" Grid.Column="2" Content="Clear" Style="{DynamicResource SelectButton}" />

                <dx:SimpleButton x:Name="ButtonExitSelectPositive" Tag="positive" Grid.Row="1" Content="Positive" Style="{DynamicResource SelectButton}"
                                 Command="{Binding SelectPositiveCommand, ElementName=mySignalsView}" CommandParameter="exit" Visibility="Collapsed"/>
            </Grid>
        </GroupBox>

    </Grid>
</UserControl>
