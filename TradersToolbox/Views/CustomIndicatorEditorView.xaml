<UserControl xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:ViewModels="clr-namespace:TradersToolbox.ViewModels"
             xmlns:core="clr-namespace:TradersToolbox.Core;assembly=TradersToolbox.Core"
             xmlns:dxwui="http://schemas.devexpress.com/winfx/2008/xaml/windowsui"
             xmlns:Custom="http://schemas.devexpress.com/winfx/2008/xaml/windowsui/internal"
             xmlns:Primitives="clr-namespace:DevExpress.Xpf.Controls.Primitives;assembly=DevExpress.Xpf.Controls.v20.2"
             xmlns:local="clr-namespace:TradersToolbox"
             xmlns:viewmodels="clr-namespace:TradersToolbox.ViewModels"
             xmlns:System="clr-namespace:System;assembly=mscorlib"
             x:Class="TradersToolbox.Views.CustomIndicatorEditor"
             mc:Ignorable="d"
             DataContext="{dxmvvm:ViewModelSource Type={x:Type ViewModels:CustomIndicatorEditorViewModel}}"
             d:DesignHeight="600" d:DesignWidth="900">
    <UserControl.Resources>
        <Style TargetType="dx:SimpleButton">
            <Setter Property="CornerRadius" Value="5"/>
        </Style>
        <BooleanToVisibilityConverter x:Key="boolToVis"/>
        <ViewModels:CustIndTypeConverter x:Key="typeConverter"/>
    </UserControl.Resources>
    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:OpenFileDialogService Filter="Python files (*.py)|*.py|All files (*.*)|*.*" Multiselect="False"/>
        <dxmvvm:SaveFileDialogService DefaultFileName="pythonIndicator" Filter="Python files (*.py)|*.py|All files (*.*)|*.*"/>
        <dxmvvm:CurrentWindowService/>
        <dx:DXMessageBoxService/>
    </dxmvvm:Interaction.Behaviors>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="10*"/>
        </Grid.ColumnDefinitions>

        <dxg:GridControl x:Name="indGrid" AllowInitiallyFocusedRow="True"
                        ItemsSource="{Binding CustomIndicators}" SelectedItem="{Binding SelectedIndicator}"
                        DesignTimeDataObjectType="{x:Type core:CustomIndicator}" DesignTimeShowSampleData="True" DesignTimeDataSourceRowCount="5">
            <dxg:GridControl.View>
                <dxg:TableView AllowEditing="False" AutoWidth="True" AllowGrouping="False" AllowColumnMoving="False" NavigationStyle="Row"
                               ShowIndicator="False" ShowGroupPanel="False" HighlightItemOnHover="True" ShowVerticalLines="False"/>
            </dxg:GridControl.View>
            <dxg:GridColumn FieldName="shortName" IsSmart="True" Header="Name"/>
            <dxg:GridColumn FieldName="type" IsSmart="True" Header="Type" Width="Auto" AllowResizing="false"/>
        </dxg:GridControl>

        <Grid Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            
            <dx:SimpleButton Margin="3" Content="Add" Command="{Binding AddCommand}"/>
            <dx:SimpleButton Margin="3" Grid.Column="1" Content="Delete" Command="{Binding DeleteCommand}"/>
            <dx:SimpleButton Margin="3" Grid.Column="2" Content="Clear" Command="{Binding ClearCommand}"/>
        </Grid>
        
        <Grid Grid.Column="1" Grid.RowSpan="2" Margin="10,5,0,0">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>

            <TextBlock x:Name="tbName" Text="Name:" Margin="5,0,10,0" VerticalAlignment="Center"/>
            <dxe:TextEdit Grid.Column="1" EditValue="{Binding SelectedIndicator.shortName, UpdateSourceTrigger=PropertyChanged}"/>

            <dxwui:PageView Grid.Row="1" Grid.ColumnSpan="2" Header="Type:" Padding="5" AnimationType="SlideHorizontal" AnimationSpeedRatio="2"
                            Margin="0,5,0,0" SelectedIndex="{Binding SelectedIndicator.type, Mode=TwoWay, Converter={StaticResource typeConverter}}">
                <dxwui:PageView.HeaderTemplate>
                    <DataTemplate>
                        <TextBlock Text="{Binding}" FontSize="{Binding FontSize, ElementName=tbName}" FontWeight="Normal"/>
                    </DataTemplate>
                </dxwui:PageView.HeaderTemplate>
                <dxwui:PageView.ItemContainerStyle>
                    <Style TargetType="dxwui:PageViewItem">
                        <Setter Property="HeaderTemplate">
                            <Setter.Value>
                                <DataTemplate>
                                    <TextBlock Text="{Binding}" FontSize="{Binding FontSize, ElementName=tbName}" />
                                </DataTemplate>
                            </Setter.Value>
                        </Setter>
                        <Setter Property="Padding" Value="2"/>
                        <Setter Property="FontSize" Value="{Binding FontSize, ElementName=tbName}"/>
                    </Style>
                </dxwui:PageView.ItemContainerStyle>

                <dxwui:PageViewItem Header="Boolean">
                    <StackPanel Margin="5,10,5,0">
                        <TextBlock Text="Rule" Grid.ColumnSpan="2" Margin="0,0,0,10"/>
                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule1Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key" />

                            <RadioButton x:Name="rbRule1B" Grid.Row="1" IsEnabled="False"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=rbRule1B}"
                                              ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule1B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key" />

                            <!--<dxe:SpinEdit Margin="3" Grid.Column="2"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1"  IsEnabled="{Binding IsChecked, ElementName=rbRule1B}"/>-->

                            <RadioButton x:Name="rbRule1Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0" IsChecked="True"
                                         Command="{Binding RadioButtonRule1ValueCommand}"/>

                            <TextBlock Margin="3" Grid.Column="4" Text="equals to:" VerticalAlignment="Center"/>
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" Grid.Row="1" IsTextEditable="False"
                                              IsEnabled="{Binding IsChecked, ElementName=rbRule1Val}"
                                              ItemsSource="{Binding boolVal}" DisplayMember="Value" ValueMember="Key" NullValue="0"
                                              EditValue="{DXBinding SelectedBoolTrigger.rule1Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay, BackExpr='(decimal)@v'}"/>
                        </Grid>

                        <Grid Grid.Row="2" Margin="0,20" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Extra rule mode:" VerticalAlignment="Center"/>
                            <dxe:ComboBoxEdit x:Name="cbRule2" Margin="7,0,2,0" Grid.Column="1" IsTextEditable="False"
                                              ItemsSource="{Binding crossOp}" DisplayMember="Value" ValueMember="Key" NullValue="0"
                                              EditValue="{Binding SelectedBoolTrigger.crossOp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              EditValueType="{x:Type System:Int32}"/>
                        </Grid>

                        <Grid Grid.Row="3" Grid.ColumnSpan="2" IsEnabled="{DXBinding '@e(cbRule2).SelectedIndex gt 0'}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule2Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key"/>

                            <RadioButton x:Name="rbRule2B" Grid.Row="1" IsEnabled="False"/>
                            
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=rbRule2B}"
                                              ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule2B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key"/>

                            <!--<dxe:SpinEdit Margin="3" Grid.Column="2"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=rbRule2B}"/>-->

                            <RadioButton x:Name="rbRule2Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0" IsChecked="True"
                                         Command="{Binding RadioButtonRule2ValueCommand}"/>

                            <TextBlock Margin="3" Grid.Column="4" Text="equals to:" VerticalAlignment="Center"/>
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" Grid.Row="1" IsTextEditable="False"
                                              IsEnabled="{Binding IsChecked, ElementName=rbRule2Val}"
                                              ItemsSource="{Binding boolVal}" DisplayMember="Value" ValueMember="Key" NullValue="0"
                                              EditValue="{Binding SelectedBoolTrigger.rule2Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Grid>

                        <TextBlock Grid.Row="4" Text="{Binding Error}" Foreground="Red" VerticalAlignment="Center"
                                   Visibility="{DXBinding 'Error!=null', Converter={StaticResource boolToVis}}"/>
                        <TextBlock Grid.Row="5" Text="Preview"  Margin="0,10"/>
                        <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="{Binding PreviewString}"/>
                    </StackPanel>
                </dxwui:PageViewItem>
                
                <dxwui:PageViewItem Header="Comparative">
                    <StackPanel Margin="5,10,5,0">
                        <TextBlock Text="Rule" Grid.ColumnSpan="2" Margin="0,0,0,10"/>
                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <RadioButton x:Name="comp_rbRule1B" Grid.Row="1" IsChecked="{DXBinding 'SelectedCompCross.rule1B.Length gt 0', Mode=OneWay}"/>
                            
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule1B}"
                                              ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <dxe:SpinEdit Margin="3" Grid.Column="2" Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule1Offset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule1B}"
                                          Mask="D" MinValue="0"  EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule1Boffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                            <RadioButton x:Name="comp_rbRule1Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0"
                                         IsChecked="{DXBinding '!(@e(comp_rbRule1B).IsChecked)', Mode=OneWay}"
                                         Command="{Binding RadioButtonRule1ValueCommand}"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" ItemsSource="{Binding opComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1Op, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              NullText="="/>
                            <dxe:SpinEdit Margin="3" Grid.Column="4" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule1Val}"
                                          EditValue="{Binding SelectedCompCross.rule1Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Grid>

                        <Grid Grid.Row="2" Margin="0,20" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Extra rule mode:" VerticalAlignment="Center"/>
                            <dxe:ComboBoxEdit x:Name="comp_cbRule2" Margin="7,0,2,0" Grid.Column="1" IsTextEditable="False" ItemsSource="{Binding crossOp}"
                                              DisplayMember="Value" ValueMember="Key" NullValue="0"
                                              EditValue="{Binding SelectedCompCross.crossOp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              EditValueType="{x:Type System:Int32}"/>
                        </Grid>

                        <Grid Grid.Row="3" Grid.ColumnSpan="2" IsEnabled="{DXBinding '@e(comp_cbRule2).SelectedIndex gt 0'}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <RadioButton x:Name="comp_rbRule2B" Grid.Row="1" IsChecked="{DXBinding 'SelectedCompCross.rule2B.Length gt 0', Mode=OneWay}"/>
                            
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule2B}"
                                              ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <dxe:SpinEdit Margin="3" Grid.Column="2" Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule2Offset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule2B}"
                                          Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule2Boffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                            <RadioButton x:Name="comp_rbRule2Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0"
                                         IsChecked="{DXBinding '!(@e(comp_rbRule2B).IsChecked)', Mode=OneWay}"
                                         Command="{Binding RadioButtonRule2ValueCommand}"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" ItemsSource="{Binding opComp}"  IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2Op, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              NullText="="/>
                            <dxe:SpinEdit Margin="3" Grid.Column="4" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=comp_rbRule2Val}"
                                          EditValue="{Binding SelectedCompCross.rule2Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Grid>

                        <TextBlock Grid.Row="4" Text="{Binding Error}" Foreground="Red" VerticalAlignment="Center"
                                   Visibility="{DXBinding 'Error!=null', Converter={StaticResource boolToVis}}"/>
                        <TextBlock Grid.Row="5" Text="Preview" Margin="0,10"/>
                        <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="{Binding PreviewString}"/>
                    </StackPanel>
                </dxwui:PageViewItem>
                
                <dxwui:PageViewItem Header="Cross">
                    <StackPanel Margin="5,10,5,0">
                        <TextBlock Text="Rule" Grid.ColumnSpan="2" Margin="0,0,0,10"/>
                        <Grid Grid.Row="1" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <RadioButton x:Name="cross_rbRule1B" Grid.Row="1" IsChecked="{DXBinding 'SelectedCompCross.rule1B.Length gt 0', Mode=OneWay}"/>
                            
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=cross_rbRule1B}"
                                              ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <dxe:SpinEdit Margin="3" Grid.Column="2" Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule1Offset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1"  IsEnabled="{Binding IsChecked, ElementName=cross_rbRule1B}"
                                          Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule1Boffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                            <RadioButton x:Name="cross_rbRule1Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0"
                                         IsChecked="{DXBinding '!(@e(cross_rbRule1B).IsChecked)', Mode=OneWay}"
                                         Command="{Binding RadioButtonRule1ValueCommand}"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" ItemsSource="{Binding opCros}"  IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule1Op, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              NullText="crosses above"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="4" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=cross_rbRule1Val}"
                                          EditValue="{Binding SelectedCompCross.rule1Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Grid>

                        <Grid Grid.Row="2" Margin="0,20" Grid.ColumnSpan="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Extra rule mode:" VerticalAlignment="Center"/>
                            <dxe:ComboBoxEdit x:Name="cross_cbRule2" Margin="7,0,2,0" Grid.Column="1" IsTextEditable="False" ItemsSource="{Binding crossOp}"
                                              DisplayMember="Value" ValueMember="Key" NullValue="0"
                                              EditValue="{Binding SelectedCompCross.crossOp, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              EditValueType="{x:Type System:Int32}"/>
                        </Grid>

                        <Grid Grid.Row="3" Grid.ColumnSpan="2" IsEnabled="{DXBinding '@e(cross_cbRule2).SelectedIndex gt 0'}" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <RadioButton x:Name="cross_rbRule2B" Grid.Row="1" IsChecked="{DXBinding 'SelectedCompCross.rule2B.Length gt 0', Mode=OneWay}"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=cross_rbRule2B}"
                                              ItemsSource="{Binding signalsListComp}" IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value" ValueMember="Key"/>

                            <dxe:SpinEdit Margin="3" Grid.Column="2" Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule2Offset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="2" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=cross_rbRule2B}"
                                          Mask="D" MinValue="0" EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedCompCross.rule2Boffset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

                            <RadioButton x:Name="cross_rbRule2Val" Grid.Row="1" Grid.Column="3" Margin="10,0,0,0"
                                         IsChecked="{DXBinding '!(@e(cross_rbRule2B).IsChecked)', Mode=OneWay}"
                                         Command="{Binding RadioButtonRule2ValueCommand}"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="4" ItemsSource="{Binding opCros}"  IsTextEditable="False"
                                              EditValue="{Binding SelectedCompCross.rule2Op, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              NullText="crosses above"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="4" Grid.Row="1" IsEnabled="{Binding IsChecked, ElementName=cross_rbRule2Val}"
                                          EditValue="{Binding SelectedCompCross.rule2Val, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        </Grid>

                        <TextBlock Grid.Row="4" Text="{Binding Error}" Foreground="Red" VerticalAlignment="Center"
                                   Visibility="{DXBinding 'Error!=null', Converter={StaticResource boolToVis}}"/>
                        <TextBlock Grid.Row="5" Text="Preview" Margin="0,10"/>
                        <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="{Binding PreviewString}"/>
                    </StackPanel>
                </dxwui:PageViewItem>
                
                <dxwui:PageViewItem Header="Python">
                    <Grid Margin="5,10,5,0">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="auto"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                            <RowDefinition Height="auto"/>
                        </Grid.RowDefinitions>
                        
                        <TextBlock Text="Python script file:" Grid.ColumnSpan="3"/>
                        <dxe:TextEdit Grid.Row="1" Grid.ColumnSpan="3"
                                      EditValue="{Binding SelectedIndicator.pythonFileName, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                        <dx:SimpleButton Grid.Row="2" Margin="5" MinWidth="100" Grid.Column="1" Content="Open..."
                                         Command="{Binding PyOpenCommand}"/>
                        <dx:SimpleButton Grid.Row="2" Margin="5" MinWidth="100" Grid.Column="2" Content="Create..."
                                         Command="{Binding PyCreateCommand}"/>
                        <dx:SimpleButton Grid.Row="3" Margin="5" MinWidth="100" Grid.Column="2" Content="Edit..."
                                         IsEnabled="{x:Static ViewModels:MainWindowViewModel.PYTHON_READY}"
                                         Command="{Binding PyEditCommand}"/>

                        <dxe:ProgressBarEdit Grid.Row="4" Grid.ColumnSpan="3" CornerRadius="3" MaxHeight="10" Margin="0,20,0,0"
                                             Visibility="{Binding PyTestProgress, Converter={StaticResource boolToVis}}">
                            <dxe:ProgressBarEdit.StyleSettings>
                                <dxe:ProgressBarMarqueeStyleSettings/>
                            </dxe:ProgressBarEdit.StyleSettings>
                        </dxe:ProgressBarEdit>
                        <dx:SimpleButton Grid.Row="5" Margin="5" MinWidth="100" Grid.Column="2" Content="Test indicator"
                                         IsEnabled="{x:Static ViewModels:MainWindowViewModel.PYTHON_READY}"
                                         Command="{Binding PyTestCommand}"/>
                        <TextBlock Grid.Row="6" Grid.ColumnSpan="3" TextWrapping="Wrap" Foreground="Gray"
                                   Text="Test Indicator function works on ES data from Jan 1, 2010 to July 1, 2010. It is used to check correctness of python indicator process flow."/>
                        <TextBlock Grid.Row="7" TextWrapping="Wrap" Text="{Binding PreviewString}" Margin="0,10,0,0" Grid.ColumnSpan="3"/>
                    </Grid>
                </dxwui:PageViewItem>
                
                <dxwui:PageViewItem Header="Trigger">
                    <StackPanel Margin="5,10,5,0">
                        <TextBlock Text="Rule" Grid.ColumnSpan="2" Margin="0,0,0,10"/>
                        <Grid Grid.Row="1" Grid.ColumnSpan="2" Margin="0,0,0,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                                <RowDefinition Height="auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Text="Trigger:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                            <TextBlock Text="Offset:" VerticalAlignment="Center" Grid.Row="1"/>
                            <TextBlock Text="Base:" VerticalAlignment="Center" Grid.Row="2"/>

                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule1Base, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key"/>
                            <dxe:SpinEdit Margin="3" Grid.Column="1" Grid.Row="1" Mask="D" MinValue="0" HorizontalAlignment="Left" MinWidth="60"
                                          EditValueType="{x:Type System:Int32}"
                                          EditValue="{Binding SelectedBoolTrigger.rule1Offset, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>
                            <dxe:ComboBoxEdit Margin="3" Grid.Column="1" Grid.Row="2"
                                              ItemsSource="{Binding signalsListBool}" IsTextEditable="False"
                                              EditValue="{Binding SelectedBoolTrigger.rule1B, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
                                              DisplayMember="Value.codeEL" ValueMember="Key"/>
                        </Grid>

                        <TextBlock Grid.Row="4" Text="{Binding Error}" Foreground="Red" VerticalAlignment="Center"
                                   Visibility="{DXBinding 'Error!=null', Converter={StaticResource boolToVis}}"/>
                        <TextBlock Grid.Row="5" Text="Preview" Margin="0,10"/>
                        <TextBlock Grid.Row="6" TextWrapping="Wrap" Text="{Binding PreviewString}"/>
                    </StackPanel>
                </dxwui:PageViewItem>
            </dxwui:PageView>
        </Grid>

        <StackPanel Grid.Row="2" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center" Margin="0,8,0,5">
            <dx:SimpleButton Content="OK" MinWidth="100" Margin="0,0,10,0" Command="{Binding OKCommand}"/>
            <dx:SimpleButton Content="Cancel" MinWidth="100" Command="{Binding CancelCommand}"/>
        </StackPanel>
    </Grid>
</UserControl>
