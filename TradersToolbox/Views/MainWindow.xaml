<dx:ThemedWindow 
    x:Class="TradersToolbox.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
    xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
    xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
    xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
    xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
    xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
    xmlns:viewModels="clr-namespace:TradersToolbox.ViewModels"
    xmlns:views="clr-namespace:TradersToolbox.Views"
    xmlns:local="clr-namespace:TradersToolbox"
    xmlns:dxmvvm1="http://schemas.devexpress.com/winfx/2008/xaml/controls"
    xmlns:properties="clr-namespace:TradersToolbox.Properties"
    mc:Ignorable="d"
    Title="{Binding Title}"
    TitleAlignment="Center"
    Height="{Binding Source={x:Static properties:Settings.Default}, Path=MainWindowHeight, Mode=TwoWay}"
    Width="{Binding Source={x:Static properties:Settings.Default}, Path=MainWindowWidth, Mode=TwoWay}"
    Left="{Binding Source={x:Static properties:Settings.Default}, Path=MainWindowLeft, Mode=TwoWay}"
    Top="{Binding Source={x:Static properties:Settings.Default}, Path=MainWindowTop, Mode=TwoWay}"
    MinWidth="300" MinHeight="300"
    ShowIcon="True"
    UseLayoutRounding="True"
    Padding="0"
    d:DesignHeight="750" d:DesignWidth="1200"
    DataContext="{dxmvvm:ViewModelSource Type={x:Type viewModels:MainWindowViewModel}}"
    Loaded="ThemedWindow_Loaded" Closing="ThemedWindow_Closing">
                
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="/TradersToolbox_x64_v3;component/Resources/Resources.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <BooleanToVisibilityConverter x:Key="boolToVis"/>

        </ResourceDictionary>
    </Window.Resources>

    <!--<dx:ThemedWindow.Resources>
        <DataTemplate x:Key="controlBoxTemplate">
            <dxe:PopupBaseEdit ShowText="False"
                               ShowBorder="False"
                               AllowDefaultButton="False"
                               Width="24"
                               Height="23"
                               PopupWidth="550"
                               PopupHeight="450"
                               AllowRecreatePopupContent="False"
                               ShowSizeGrip="True">
                <dxe:PopupBaseEdit.PopupContentTemplate>
                    <ControlTemplate>
                        <dxg:GridControl DataContext="{Binding (dxe:BaseEdit.OwnerEdit).DataContext, RelativeSource={RelativeSource TemplatedParent}}"
                                                 ItemsSource="{Binding SymbolsSource}"
                                                 SelectionMode="Row"
                                                 SelectedItemChanged="{DXEvent CreateTabView(@sender\, @args)}"
                                                 ShowBorder="False">
                            <dxg:GridControl.View>
                                <dxg:TableView x:Name="watchListView"
                                                       AllowEditing="False"
                                                       FadeSelectionOnLostFocus="False"
                                                       AllowPerPixelScrolling="True"
                                                       ShowGroupPanel="False"
                                                       AllowGrouping="False"
                                                       ShowSearchPanelMode="Always"
                                                       SearchPanelHorizontalAlignment="Left"
                                                       ShowSearchPanelNavigationButtons="True"
                                                       ScrollBarAnnotationMode="SearchResult"
                                                       AutoWidth="True"
                                                       HorizontalAlignment="Right"
                                                       UseLayoutRounding="True"
                                                       RowMinHeight="30"
                                                       ShowIndicator="False"
                                                       ShowVerticalLines="False"
                                                       Loaded="{DXEvent TableViewLoaded(@sender\, @args)}"/>
                            </dxg:GridControl.View>
                            <dxg:GridColumn FieldName="Symbol" Header="Symbol"/>
                            <dxg:GridColumn FieldName="CurrentPrice" Header="Last Price">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings DisplayFormat="f2"/>
                                </dxg:GridColumn.EditSettings>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="Change24" Header="Change">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings DisplayFormat="f3"/>
                                </dxg:GridColumn.EditSettings>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="Volume24" Header="Volume">
                                <dxg:GridColumn.EditSettings>
                                    <dxe:TextEditSettings DisplayFormat="f3"/>
                                </dxg:GridColumn.EditSettings>
                            </dxg:GridColumn>
                            <dxg:GridColumn FieldName="Group" Header="Group" GroupIndex="0"/>
                        </dxg:GridControl>
                    </ControlTemplate>
                </dxe:PopupBaseEdit.PopupContentTemplate>
                <dxe:ButtonInfo ButtonKind="Simple"
                                            GlyphKind="Plus"
                                            Command="{Binding (dxe:BaseEdit.OwnerEdit).OpenPopupCommand, RelativeSource={RelativeSource Self}}"/>
            </dxe:PopupBaseEdit>
        </DataTemplate>
    </dx:ThemedWindow.Resources>-->

    <dx:ThemedWindow.ToolbarItems>
        <dxb:MainMenuControl VerticalAlignment="Center"/>
        <dxe:SearchControl NullText="Quick Launch" ShowMRUButton="False" ShowFindButton="True" Height="22" Margin="4,0,6,0" Width="200" />
    </dx:ThemedWindow.ToolbarItems>

    <dx:ThemedWindow.HeaderItems>
        <!-- No data update -->
        <dx:HeaderItemControl Visibility="{DXBinding 'DBupdaterProgress == 0', Mode=OneWay, Converter={StaticResource boolToVis}}"
                              ToolTip="{Binding DBupdaterMessage}">
            <Image Source="{dx:DXImage 'SvgImages/Icon Builder/Actions_Info.svg'}" Height="18"/>
        </dx:HeaderItemControl>
        
        <!-- Data update in progress -->
        <dx:HeaderItemControl Visibility="{DXBinding 'DBupdaterProgress > 0 and DBupdaterProgress lt 100', Mode=OneWay, Converter={StaticResource boolToVis}}">
            <!--<dx:HeaderItemControl>-->
            <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/Resources/cloud-download.svg'}" Height="20" Margin="0,2,0,0"/>

            <dx:HeaderItemControl.ToolTip>
                <StackPanel>
                    <TextBlock Text="Database update" Margin="2,0,0,5"/>
                    <ProgressBar Height="10" Value="{Binding DBupdaterProgress}" Width="150"/>
                    <TextBlock Text="{Binding Path=DBupdaterProgress, StringFormat='\{0\}% complete'}" Margin="2,5,0,0"/>
                </StackPanel>
            </dx:HeaderItemControl.ToolTip>
        </dx:HeaderItemControl>

        <!-- Data update successful -->
        <dx:HeaderItemControl Visibility="{DXBinding 'DBupdaterProgress >= 100', Mode=OneWay, Converter={StaticResource boolToVis}}"
                              ToolTip="{Binding DBupdaterMessage}">
            <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/Resources/checked.svg'}" Height="16" Margin="0,2,0,0"/>
        </dx:HeaderItemControl>

        <!-- Data update failed -->
        <dx:HeaderItemControl Visibility="{DXBinding 'DBupdaterProgress lt 0', Mode=OneWay, Converter={StaticResource boolToVis}}"
                              ToolTip="{Binding DBupdaterMessage}">
            <Image Source="{dx:SvgImageSource Uri='pack://application:,,,/Resources/cloud-error.svg'}" Height="18" Margin="0,1,0,0"/>
        </dx:HeaderItemControl>

        <dx:HeaderItemControl dxb:BarManager.MenuShowMouseButton="LeftButton" Margin="0,0,20,0" ToolTip="{Binding BrokersManager.BrokerName}">
            <dxb:BarManager.DXContextMenu>
                <dxb:PopupControlContainer>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Margin="14">
                            <Border DockPanel.Dock="Left" Background="{DXBinding Expr='BrokersManager.IsLoggedIn ? `Green` : `#FFb0b0b0`'}" CornerRadius="5">
                                <TextBlock Text="{Binding BrokersManager.BrokerName}" Margin="10,7" Foreground="White" TextWrapping="Wrap" MaxWidth="45" TextAlignment="Center" FontWeight="SemiBold"/>
                            </Border>
                            <StackPanel Margin="16,0,6,0" VerticalAlignment="Center">
                                <TextBlock Text="{Binding BrokersManager.UserId}" FontSize="14" VerticalAlignment="Center" MinWidth="50"/>
                            </StackPanel>
                        </StackPanel>
                        <dx:SimpleButton Content="Log in" HorizontalContentAlignment="Center" Margin="4,2" Focusable="False" IsEnabled="{DXBinding !BrokersManager.IsLoggedIn}" CornerRadius="5"
                                         Command="{Binding BrokerLogInCommand}"/>
                        <dx:SimpleButton Content="Log out" HorizontalContentAlignment="Center" Margin="4,2,4,4" Focusable="False" IsEnabled="{Binding BrokersManager.IsLoggedIn}" CornerRadius="5"
                                         Command="{Binding BrokerLogOutCommand}"/>
                    </StackPanel>
                </dxb:PopupControlContainer>
            </dxb:BarManager.DXContextMenu>
            <Border DockPanel.Dock="Left" Background="{DXBinding Expr='BrokersManager.IsLoggedIn ? `Green` : `#FFb0b0b0`'}" CornerRadius="10" MinWidth="30">
                <TextBlock Text="{Binding BrokersManager.BrokerKey}" Margin="2" Foreground="White" HorizontalAlignment="Center" FontWeight="SemiBold"/>
            </Border>
        </dx:HeaderItemControl>

        <!--<views:InformationPanel DataContext="{Binding InformationPanelModel}"
                                VerticalAlignment="Center"
                                HorizontalAlignment="Left"
                                Margin="0,0,20,0"
                                Loaded="OnInformationPanelLoaded"
                                dxi:WindowChrome.IsHitTestVisibleInChrome="False"/>-->
    </dx:ThemedWindow.HeaderItems>

    <dxmvvm:Interaction.Behaviors>
        <dxmvvm:EventToCommand EventName="Loaded" Command="{Binding LoadedCommand}"/>
        <dxmvvm:EventToCommand EventName="Closing" Command="{Binding ClosingCommand}" PassEventArgsToCommand="True"/>
        <dxmvvm:EventToCommand EventName="Closed" Command="{Binding ClosedCommand}"/>
        <dxmvvm:WindowService x:Name="WindowServiceIndicators" AllowSetWindowOwner="False" Title="Custom Indicators  Editor">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <Setter Property="Width" Value="{Binding Source={x:Static properties:Settings.Default}, Path=CustomIndicatorsWindowWidth, Mode=TwoWay}"/>
                    <Setter Property="Height" Value="{Binding Source={x:Static properties:Settings.Default}, Path=CustomIndicatorsWindowHeight, Mode=TwoWay}"/>
                    <Setter Property="MinWidth" Value="600"/>
                    <Setter Property="MinHeight" Value="500"/>
                    <Setter Property="TitleAlignment" Value="Center"/>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:WindowService x:Name="WindowServiceStrategies" AllowSetWindowOwner="False" Title="Custom Strategies Editor">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <Setter Property="Width" Value="{Binding Source={x:Static properties:Settings.Default}, Path=CustomStratWindowWidth, Mode=TwoWay}"/>
                    <Setter Property="Height" Value="{Binding Source={x:Static properties:Settings.Default}, Path=CustomStratWindowHeight, Mode=TwoWay}"/>
                    <Setter Property="MinWidth" Value="400"/>
                    <Setter Property="MinHeight" Value="300"/>
                    <Setter Property="TitleAlignment" Value="Center"/>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:WindowService x:Name="WindowServiceSimTask" AllowSetWindowOwner="False" Title="Simulation Task Wizard" UnregisterOnUnloaded="True">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <!--<Setter Property="SizeToContent" Value="WidthAndHeight"/>-->
                    <Setter Property="Width" Value="{Binding Source={x:Static properties:Settings.Default}, Path=SimTaskWindowWidth, Mode=TwoWay}"/>
                    <Setter Property="Height" Value="{Binding Source={x:Static properties:Settings.Default}, Path=SimTaskWindowHeight, Mode=TwoWay}"/>

                    <Setter Property="MinWidth" Value="980"/>
                    <Setter Property="MinHeight" Value="630"/>
                    <!--<Setter Property="WindowKind" Value="Normal"/>-->
                    <Setter Property="TitleAlignment" Value="Center"/>

                    <Setter Property="dxmvvm:Interaction.BehaviorsTemplate">
                        <Setter.Value>
                            <DataTemplate>
                                <ItemsControl>
                                    <dxmvvm:KeyToCommand Command="{Binding RegularSimulationCommand}" KeyGesture="F5"/>
                                    <dxmvvm:KeyToCommand Command="{Binding ContinuousSimulationCommand}" KeyGesture="F6"/>
                                </ItemsControl>
                            </DataTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:WindowService x:Name="WindowServiceSettings" AllowSetWindowOwner="true" Title="Settings">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <Setter Property="Width" Value="800"/>
                    <Setter Property="Height" Value="600"/>
                    <Setter Property="MinWidth" Value="500"/>
                    <Setter Property="MinHeight" Value="500"/>
                    <!--<Setter Property="TitleAlignment" Value="Center"/>-->
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:WindowService x:Name="WindowServiceOrderTest" AllowSetWindowOwner="true" Title="Order Test">
            <dxmvvm:WindowService.WindowStyle>
                <Style TargetType="dx:ThemedWindow">
                    <Setter Property="Width" Value="300"/>
                    <Setter Property="Height" Value="500"/>
                    <Setter Property="MinWidth" Value="250"/>
                    <Setter Property="MinHeight" Value="500"/>
                    <!--<Setter Property="TitleAlignment" Value="Center"/>-->
                </Style>
            </dxmvvm:WindowService.WindowStyle>
        </dxmvvm:WindowService>
        <dxmvvm:OpenFileDialogService CheckFileExists="True"/>
        <dxmvvm:SaveFileDialogService/>
        <dx:DXMessageBoxService/>
    </dxmvvm:Interaction.Behaviors>

    <dxb:BarManager BarsSource="{Binding Bars}" BarTemplateSelector="{StaticResource VS2019BarTemplateSelector}">
        <Grid>

            <!--<dx:DXTabControl x:Name="tab"
                         Padding="0"
                         SnapsToDevicePixels="True"
                         ControlBoxPanelTemplate="{StaticResource controlBoxTemplate}"
                         dx:WorkspaceManager.IsEnabled="True"
                         Initialized="{DXEvent 'CreateTabView(@sender, @args)'}"
                         >
            <dxmvvm:Interaction.Behaviors>
                <dx:TabbedWindowDocumentUIService ShowNewItemOnStartup="False" />
            </dxmvvm:Interaction.Behaviors>
            -->
            <!--<dx:DXTabControl.View>
                <dx:TabControlStretchView RemoveTabItemsOnHiding="True"
                                          MoveItemsWhenDragDrop="False"
                                          NewButtonShowMode="NoWhere"
                                          HideButtonShowMode="InAllTabs"
                                          SingleTabItemHideMode="HideAndShowNewItem"
                                          CloseWindowOnSingleTabItemHiding="True"
                                          DragDropMode="Full"
                                          TabNormalSize="130">
                    <dx:TabControlStretchView.NewTabControlStyle>
                        <Style TargetType="dx:DXTabControl">
                            <Setter Property="Padding" Value="0"/>
                            <Setter Property="ControlBoxPanelTemplate" Value="{StaticResource controlBoxTemplate}"/>
                        </Style>
                    </dx:TabControlStretchView.NewTabControlStyle>
                </dx:TabControlStretchView>
            </dx:DXTabControl.View>-->
            <!--<dx:DXTabControl.ContentFooterTemplate>
                <DataTemplate>
                    <Grid>
                        <dxb:ToolBarControl BackgroundTemplate="{x:Null}"
                            GlyphSize="Small"
                            ShowDragWidget="False"
                            AllowCollapse="False"
                            AllowCustomizationMenu="False"
                            AllowHide="False"
                            AllowQuickCustomization="False"
                            AllowRename="False"
                            Margin="3,-2,0,0">
                            <dxb:BarSubItem Content="Theme">
                                <dxb:BarCheckItem Content="Dark"
                                          IsChecked="{DXBinding Expr='ThemeIndex == 0', BackExpr='0'}"/>
                                <dxb:BarCheckItem Content="Light"
                                          IsChecked="{DXBinding Expr='ThemeIndex == 1', BackExpr='1'}"/>
                            </dxb:BarSubItem>
                        </dxb:ToolBarControl>
                        <TextBlock Text="{Binding CurrentTime, StringFormat='MMMM dd, yyyy H:mm:ss'}"
                           HorizontalAlignment="Right"
                           VerticalAlignment="Center"
                           Margin="0,-1,7,0"/>
                    </Grid>
                </DataTemplate>
            </dx:DXTabControl.ContentFooterTemplate>-->
            <!--
        </dx:DXTabControl>-->


            <dxdo:DockLayoutManager x:Name="DockContainer" FloatingMode="Window" ItemsSource="{Binding Workspaces}"
                                    FloatingDocumentContainer="DocumentHost">
                <dxmvvm:Interaction.Behaviors>
                    <local:DockingSerializationDialogService/>
                    <dxmvvm:FocusBehavior/>
                </dxmvvm:Interaction.Behaviors>
                <!--<dxdo:DockLayoutManager.FloatGroups>
                    <dxdo:FloatGroup>
                        <dxdo:LayoutGroup Name="FloatHost" DestroyOnClosingChildren="False"/>
                    </dxdo:FloatGroup>
                </dxdo:DockLayoutManager.FloatGroups>-->
                <dxdo:LayoutGroup Name="Root" Orientation="Vertical">
                    <dxdo:LayoutGroup Orientation="Horizontal" ItemHeight="4*">
                        <dxdo:LayoutGroup Name="LeftHost" DestroyOnClosingChildren="False"/>
                            <dxdo:LayoutGroup Orientation="Vertical">
                                <dxdo:LayoutGroup Name="TopHost" DestroyOnClosingChildren="False"/>
                            <dxdo:LayoutGroup Name="BottomHost" DestroyOnClosingChildren="False" />
                            </dxdo:LayoutGroup>
                        <dxdo:LayoutGroup Name="RightHost" DestroyOnClosingChildren="False"/>
                    </dxdo:LayoutGroup>
                    <dxdo:LayoutGroup Name="VerticalBottomHost" DestroyOnClosingChildren="False"/>
                    <!--<dxdo:LayoutGroup Orientation="Vertical" ItemWidth="3*">
                    <dxdo:LayoutGroup ItemHeight="3*">
                        <dxdo:LayoutGroup Name="Toolbox" DestroyOnClosingChildren="False" ItemWidth="190"/>
                        <dxdo:LayoutGroup ItemWidth="3*" DestroyOnClosingChildren="False">
                            <dxdo:LayoutGroup >
                                <dxdo:DocumentGroup Name="DocumentHost" DestroyOnClosingChildren="False"
                                                        ClosePageButtonShowMode="InActiveTabPageHeader" />
                            </dxdo:LayoutGroup>
                        </dxdo:LayoutGroup>
                    </dxdo:LayoutGroup>
                    <dxdo:TabbedGroup Name="BottomHost" DestroyOnClosingChildren="False" />
                </dxdo:LayoutGroup>
                <dxdo:LayoutGroup Name="RightHost" DestroyOnClosingChildren="False" Orientation="Vertical" ItemWidth="290"/>-->
                </dxdo:LayoutGroup>
            </dxdo:DockLayoutManager>



            <!--<dxdo:DockLayoutManager FloatingMode="Desktop">

            <dxdo:LayoutGroup Orientation="Horizontal">
                <dxdo:LayoutPanel Caption="Watchlist" Closed="{DXBinding '!@e(cbStock).IsChecked', BackExpr='@e(cbStock).IsChecked=!@v'}">
                    <dxdo:LayoutPanel.CaptionTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding}" FontSize="{Binding ElementName=cbStock, Path=FontSize}"/>
                        </DataTemplate>
                    </dxdo:LayoutPanel.CaptionTemplate>
                    <local:QuotesView>
                        <dxmvvm:Interaction.Behaviors>
                            <dxdo:TabbedDocumentUIService DocumentGroup="{Binding ElementName=documentGroup}"/>
                        </dxmvvm:Interaction.Behaviors>
                    </local:QuotesView>
                </dxdo:LayoutPanel>
                <dxdo:DocumentGroup x:Name="documentGroup" Caption="Charts" ItemHeight="*" TabHeadersAutoFill="True"
                                    ClosePageButtonShowMode="InAllTabPageHeaders" ShowDropDownButton="False" DestroyOnClosingChildren="True">
                    -->
            <!--<dxdo:DocumentGroup.CaptionTemplate>
                        
                    </dxdo:DocumentGroup.CaptionTemplate>-->
            <!--
                    <dxdo:DocumentPanel Caption="t1" CaptionAlignMode="Custom" CaptionWidth="100">
                        <RichTextBox/>
                    </dxdo:DocumentPanel>
                    <dxdo:DocumentPanel Caption="t2">
                        <RichTextBox/>
                    </dxdo:DocumentPanel>
                </dxdo:DocumentGroup>
            </dxdo:LayoutGroup>
        </dxdo:DockLayoutManager>-->
        </Grid>
    </dxb:BarManager>
</dx:ThemedWindow>