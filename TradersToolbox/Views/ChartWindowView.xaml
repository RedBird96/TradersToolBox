<UserControl x:Class="TradersToolbox.Views.ChartWindowView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:views="clr-namespace:TradersToolbox.Views"
             xmlns:dxdo="http://schemas.devexpress.com/winfx/2008/xaml/docking"
             xmlns:dxt="http://schemas.devexpress.com/winfx/2008/xaml/core/themekeys"
             xmlns:dxdot="http://schemas.devexpress.com/winfx/2008/xaml/docking/themekeys"
             xmlns:dxdove="http://schemas.devexpress.com/winfx/2008/xaml/docking/visualelements"
             xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
             xmlns:dxmvvm="http://schemas.devexpress.com/winfx/2008/xaml/mvvm"
             xmlns:utils="clr-namespace:TradersToolbox"
             xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
             xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars"
             xmlns:dxc="http://schemas.devexpress.com/winfx/2008/xaml/charts"
             xmlns:dxg="http://schemas.devexpress.com/winfx/2008/xaml/grid"
             xmlns:dialogs="clr-namespace:TradersToolbox.Views.DialogWindows"
             xmlns:dxct="http://schemas.devexpress.com/winfx/2008/xaml/charts/themekeys"
             xmlns:dxcl="clr-namespace:DevExpress.Xpf.Charts.Localization;assembly=DevExpress.Xpf.Charts.v20.2"
             xmlns:dxcn="clr-namespace:DevExpress.Xpf.Charts.Native;assembly=DevExpress.Xpf.Charts.v20.2" 
             xmlns:customcontrols="clr-namespace:TradersToolbox.CustomControls"
             mc:Ignorable="d"
             d:DesignHeight="450" d:DesignWidth="800">
    <UserControl.Resources>
        <ResourceDictionary>
            <Style x:Key="AddIndicatorSubitemStyle" TargetType="dxb:BarSubItem">
                <Setter Property="Content" Value="{dxcl:ChartLocalizer StringId=ToolbarAddIndicatorItemCaption}" />
                <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/AddIndicator.svg}}"/>
                <Setter Property="Hint" Value="{dxcl:ChartLocalizer StringId=ToolbarAddIndicatorItemDescription}" />
                <Setter Property="ItemsControl.MaxHeight" Value="200" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem Content="{Binding Name}" Command="{DXBinding '@a($views:ChartWindowView).DataContext.AddIndicatorCommand'}" CommandParameter="{Binding .}"/>
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="RibbonStyle" Value="Large"/>
            </Style>
            <Style x:Key="RemoveIndicatorSubitemStyle" TargetType="dxb:BarSubItem">
                <Setter Property="Content" Value="{dxcl:ChartLocalizer StringId=ToolbarRemoveIndicatorItemCaption}" />
                <Setter Property="Glyph" Value="{dx:SvgImageSource Uri={dxcn:UtilsResource Images/Commands/Remove.svg}}"/>
                <Setter Property="Hint" Value="{dxcl:ChartLocalizer StringId=ToolbarRemoveIndicatorItemDescription}" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem Content="{Binding Title}" Command="{DXBinding '@a($views:ChartWindowView).DataContext.RemoveIndicatorCommand'}" CommandParameter="{Binding .}"/>
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="RibbonStyle" Value="Large"/>
            </Style>
            <Style x:Key="MainChartLinkStyle" TargetType="dxb:BarSubItem">
                <Setter Property="ItemsControl.MaxHeight" Value="200" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem Content="{Binding LinkItemName}" Background="{Binding LinkColorName}" Command="{DXBinding '@a($views:ChartWindowView).DataContext.LinkMainChartCommand'}" CommandParameter="{Binding .}"/>
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
            </Style>
            <Style x:Key="SubChartLinkStyle" TargetType="dxb:BarSubItem">
                <Setter Property="ItemsControl.MaxHeight" Value="200" />
                <Setter Property="ItemTemplate">
                    <Setter.Value>
                        <DataTemplate>
                            <ContentControl>
                                <dxb:BarButtonItem Content="{Binding LinkItemName}"  Background="{Binding LinkColorName}" Command="{DXBinding '@a($views:ChartWindowView).DataContext.LinkSubChartCommand'}" CommandParameter="{Binding .}"/>
                            </ContentControl>
                        </DataTemplate>
                    </Setter.Value>
                </Setter>
                <Setter Property="RibbonStyle" Value="Large"/>
            </Style>
        </ResourceDictionary>
        

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>



        <dxb:BarManager
                        CreateStandardLayout="True"
                        Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarManager}}">
            <dxb:BarManager.Bars>
                <!--
                <dxb:Bar x:Name="TemplatesGroup" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarTemplatesGroup}}">
                    <dxb:BarCheckItem x:Name="AddTextAnnotationItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=AddTextAnnotationItem}}"/>
                    <dxb:BarCheckItem x:Name="AddImageAnnotationItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=AddImageAnnotationItem}}"/>
                </dxb:Bar>
                 -->

                <dxb:Bar Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarFinancialAxisGroup}}">
                    <dxb:BarEditItem  EditValue="{Binding StockChartGroupModel.StartLoopbackInterval, Mode=OneTime}" EditValueChanged="{DXEvent '@a($views:ChartWindowView).DataContext.StockChartGroupModel.LoopbackIntervalsChanged(@sender)'}" EditWidth="100">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:ComboBoxEditSettings DisplayMember="Caption" IsTextEditable="False" ItemsSource="{Binding StockChartGroupModel.LoopbackIntervalsSource}"/>
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                </dxb:Bar>
                
                <dxb:Bar Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarFinancialAxisGroup}}">
                    <dxb:BarEditItem  EditValue="{Binding StockChartGroupModel.StartInterval, Mode=OneTime}" EditValueChanged="{DXEvent '@a($views:ChartWindowView).DataContext.StockChartGroupModel.IntervalChanged(@sender)'}" EditWidth="100">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:ComboBoxEditSettings DisplayMember="Caption" IsTextEditable="False" ItemsSource="{Binding StockChartGroupModel.IntervalsSource}"/>
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                </dxb:Bar>
                


                <dxb:Bar ShowDragWidget="False">
                    <dxb:BarEditItem EditWidth="100"  Hint="Enter Symbol"   EditValueChanged="{DXEvent '@a($views:ChartWindowView).DataContext.SearchSymbol(@sender)'}" >
                        <dxb:BarEditItem.EditSettings>
                            <customcontrols:PopupBaseEditSettingsEx
                                IsTextEditable="True"
                                AllowNullInput="True"
                                ShowPopupIfReadOnly="False"
                                AcceptsReturn="True"
                                >
                                <customcontrols:PopupBaseEditSettingsEx.PopupContentTemplate>
                                    <ControlTemplate>
                                        <Grid Height="300" Width="300">
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="Auto"/>
                                                <RowDefinition Height="*"/>
                                            </Grid.RowDefinitions>

                                            <TextBlock Text="Type in a symbol to search" />


                                            <dxg:GridControl Grid.Row="1" MouseDoubleClick="{DXEvent '@a($views:ChartWindowView).DataContext.SelectSymbol(@sender,@args)'}" ItemsSource="{Binding SearchResults}">
                                                <dxg:GridControl.Columns>
                                                    <dxg:GridColumn AllowEditing="False" FieldName="Ticker" />
                                                    <dxg:GridColumn AllowEditing="False" FieldName="Description" />
                                                </dxg:GridControl.Columns>
                                                <dxg:GridControl.View>
                                                    <dxg:TableView ShowGroupPanel="False" Loaded="{DXEvent '@a($views:ChartWindowView).DataContext.TableLoaded(@sender)'}"  AutoWidth="True" />
                                                </dxg:GridControl.View>
                                            </dxg:GridControl>
                                        </Grid>
                                    </ControlTemplate>
                                </customcontrols:PopupBaseEditSettingsEx.PopupContentTemplate>
                            </customcontrols:PopupBaseEditSettingsEx>
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                </dxb:Bar>
                <dxb:Bar x:Name="FinancialIndicatorsGroup" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarFinancialIndicatorsGroup}}">
                    <dxb:BarSubItem x:Name="AddIndicatorItem"  ItemLinksSource="{Binding StockChartGroupModel.IndicatorViews}" Style="{StaticResource AddIndicatorSubitemStyle}"/>
                    <dxb:BarSubItem x:Name="RemoveIndicatorItem" ItemLinksSource="{Binding StockChartGroupModel.SelectedIndicatorViews}" Style="{StaticResource RemoveIndicatorSubitemStyle}"/>
                    <dxb:BarItemSeparator/>
                    <dxb:BarCheckItem  Tag="Horizontal" CheckedChanged="{DXEvent '@a($views:ChartWindowView).DataContext.CheckedChanged(@sender)'}" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=AddHorizontalConstantLineItem}}"/>
                    <dxb:BarCheckItem  Tag="Vertical" CheckedChanged="{DXEvent '@a($views:ChartWindowView).DataContext.CheckedChanged(@sender)'}" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=AddVerticalConstantLineItem}}"/>
                    <dxb:BarCheckItem  Tag="Angled" CheckedChanged="{DXEvent '@a($views:ChartWindowView).DataContext.CheckedChanged(@sender)'}" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=DrawTrendLineIndicatorItem}}"/>
                    <dxb:BarItemSeparator/>
                    <dxb:BarButtonItem Content="Capture" x:Name="ExportImageItem" ItemClick="itemClick" Hint="Capture chart screen"/>
                    <dxb:BarItemSeparator/>
                    <dxb:BarCheckItem  Content="On/Off" Tag="On/Off" x:Name="ChartOpenOrders" CheckedChanged="{DXEvent '@a($views:ChartWindowView).DataContext.CheckedChanged(@sender)'}" Hint="Display open orders on chart"/>
                    <dxb:BarItemSeparator/>
                    <dxb:BarSubItem  Background="{Binding SelectedlinkDataColor.LinkColorName, Mode=TwoWay}" Content="L" x:Name="LinkeChart" Hint="Link chart symbol" ItemLinksSource="{Binding LinkMainItems}" Style="{StaticResource MainChartLinkStyle}"/>
                    <dxb:BarSubItem ItemLinksSource="{Binding chartInfo}" Content="S" x:Name="Infochart" Hint="Information about chart symbol">
                        <dxb:BarButtonItem Content="{Binding chartInfo.changeValue, Mode=OneWay}" x:Name="InfochartChange" Hint="Change"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.percentValue, Mode=OneWay}" x:Name="InfochartPercent" Hint="Percent"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.volumeValue}" x:Name="InfochartVolume" Hint="Volume"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.averagevolumeValue}" x:Name="InfochartAverage" Hint="Average 30D Volume"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.sharesoutstandValue}" x:Name="InfochartShareOutstanding" Hint="Shares Outstanding"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.marketcapitalizationValue}" x:Name="InfochartMarketcaptilization" Hint="Market Capitalization"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.floatValue}" x:Name="InfochartFloatValue" Hint="Market Capitalization"/>
                        <dxb:BarButtonItem Content="{Binding chartInfo.shortPercentValue}" x:Name="InfochartShortPercent" Hint="Market Capitalization"/>
                    </dxb:BarSubItem>

                    <!--
                    <dxb:BarCheckItem x:Name="DrawFibonacciArcsIndicatorItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=DrawFibonacciArcsIndicatorItem}}"/>
                    <dxb:BarCheckItem x:Name="DrawFibonacciFansIndicatorItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=DrawFibonacciFansIndicatorItem}}"/>
                    <dxb:BarCheckItem x:Name="DrawFibonacciRetracementIndicatorItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=DrawFibonacciRetracementIndicatorItem}}"/>
                    <dxb:BarCheckItem x:Name="RemoveIndicatorItem" Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=RemoveIndicatorItem}}"/>
                    <dxb:BarItemSeparator/>
                    
                    -->
                </dxb:Bar>
                <dxb:Bar Style="{DynamicResource {dxct:ChartToolbarThemeKey ResourceKey=BarFinancialAxisGroup}}">
                    <dxb:BarEditItem  EditValue="{Binding StockChartGroupModel.StartShadeMode, Mode=OneTime}" EditValueChanged="{DXEvent '@a($views:ChartWindowView).DataContext.StockChartGroupModel.ShadeModeChagned(@sender)'}" EditWidth="100">
                        <dxb:BarEditItem.EditSettings>
                            <dxe:ComboBoxEditSettings IsTextEditable="False" ItemsSource="{Binding StockChartGroupModel.ShadeModeSource}"/>
                        </dxb:BarEditItem.EditSettings>
                    </dxb:BarEditItem>
                </dxb:Bar>

            </dxb:BarManager.Bars>
        </dxb:BarManager>

        <views:StockChartGroupView DataContext="{Binding StockChartGroupModel}" Grid.Row="1" x:Name="chartView"/>
        <!--
        <views:StockChartView DataContext="{Binding StockChartModel}" Grid.Row="1" x:Name="chartView"
                                                  Loaded="{DXEvent '@a($views:ChartWindowView).DataContext.StockChartViewLoaded(@sender)'}"/>
        -->

    </Grid>
</UserControl>